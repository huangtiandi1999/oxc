---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:6:21]
 5 │                 var b = 4;
 6 │                 var a = 4;
   ·                     ─
 7 │             }
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:8:25]
 7 │             }
 8 │             console.log(a, b);
   ·                         ─
 9 │         
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'b' is used outside of binding context.
   ╭─[block_scoped_var.tsx:8:28]
 7 │             }
 8 │             console.log(a, b);
   ·                            ─
 9 │         
   ╰────
  help: Variable 'b' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:3:21]
 2 │             if (true) {
 3 │                 var a = 3;
   ·                     ─
 4 │             } else {
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:8:25]
 7 │             }
 8 │             console.log(a, b);
   ·                         ─
 9 │         
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:5:25]
 4 │             }
 5 │             console.log(a, b);
   ·                         ─
 6 │         
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'b' is used outside of binding context.
   ╭─[block_scoped_var.tsx:5:28]
 4 │             }
 5 │             console.log(a, b);
   ·                            ─
 6 │         
   ╰────
  help: Variable 'b' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:5:25]
 4 │             }
 5 │             console.log(a, b);
   ·                         ─
 6 │         
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'b' is used outside of binding context.
   ╭─[block_scoped_var.tsx:5:28]
 4 │             }
 5 │             console.log(a, b);
   ·                            ─
 6 │         
   ╰────
  help: Variable 'b' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:6:21]
 5 │                 }
 6 │                 var a = 4;
   ·                     ─
 7 │             }
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'x' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:15]
 1 │ function f(){ x; { var x; } }
   ·               ─
   ╰────
  help: Variable 'x' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'x' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:26]
 1 │ function f(){ { var x; } x; }
   ·                          ─
   ╰────
  help: Variable 'x' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'b' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:42]
 1 │ function f() { var a; { var b = 0; } a = b; }
   ·                                          ─
   ╰────
  help: Variable 'b' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:55]
 1 │ function f() { try { var a = 0; } catch (e) { var b = a; } }
   ·                                                       ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'c' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:48]
 1 │ function a() { for(var b in {}) { var c = b; } c; }
   ·                                                ─
   ╰────
  help: Variable 'c' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'c' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:48]
 1 │ function a() { for(var b of {}) { var c = b; } c; }
   ·                                                ─
   ╰────
  help: Variable 'c' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'b' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:76]
 1 │ function f(){ switch(2) { case 1: var b = 2; b; break; default: b; break;} b; }
   ·                                                                            ─
   ╰────
  help: Variable 'b' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:22]
 1 │ for (var a = 0;;) {} a;
   ·                      ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:22]
 1 │ for (var a in []) {} a;
   ·                      ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:22]
 1 │ for (var a of []) {} a;
   ·                      ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:16]
 1 │ { var a = 0; } a;
   ·                ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:22]
 1 │ if (true) { var a; } a;
   ·                      ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:37]
 1 │ if (true) { var a = 1; } else { var a = 2; }
   ·                                     ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:17]
 1 │ if (true) { var a = 1; } else { var a = 2; }
   ·                 ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'i' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:30]
 1 │ for (var i = 0;;) {} for(var i = 0;;) {}
   ·                              ─
   ╰────
  help: Variable 'i' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'i' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:10]
 1 │ for (var i = 0;;) {} for(var i = 0;;) {}
   ·          ─
   ╰────
  help: Variable 'i' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'foo' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:42]
 1 │ class C { static { if (bar) { var foo; } foo; } }
   ·                                          ───
   ╰────
  help: Variable 'foo' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'bar' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:20]
 1 │ { var foo,  bar; } bar;
   ·                    ───
   ╰────
  help: Variable 'bar' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:45]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                                             ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:65]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                                                                 ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:16]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:65]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                                                                 ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:16]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'a' is used outside of binding context.
   ╭─[block_scoped_var.tsx:1:45]
 1 │ if (foo) { var a = 1; } else if (bar) { var a = 2; } else { var a = 3; }
   ·                                             ─
   ╰────
  help: Variable 'a' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
    ╭─[block_scoped_var.tsx:12:25]
 11 │             }
 12 │             console.log(build);
    ·                         ─────
 13 │             let t = build;
    ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
    ╭─[block_scoped_var.tsx:13:21]
 12 │             console.log(build);
 13 │             let t = build;
    ·                     ─────
 14 │         
    ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
   ╭─[block_scoped_var.tsx:7:29]
 6 │ 
 7 │                 console.log(build);
   ·                             ─────
 8 │             }
   ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
   ╭─[block_scoped_var.tsx:6:25]
 5 │                 } else {
 6 │                     var build = false;
   ·                         ─────
 7 │                 }
   ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
   ╭─[block_scoped_var.tsx:4:25]
 3 │                 if (true) {
 4 │                     var build = true;
   ·                         ─────
 5 │                 } else {
   ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
   ╭─[block_scoped_var.tsx:6:29]
 5 │                 } catch (e) {
 6 │                     var f = build;
   ·                             ─────
 7 │                 }
   ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'y' is used outside of binding context.
   ╭─[block_scoped_var.tsx:6:29]
 5 │                 }
 6 │                 console.log(y);
   ·                             ─
 7 │             }
   ╰────
  help: Variable 'y' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.

  ⚠ eslint(block-scoped-var): 'build' is used outside of binding context.
   ╭─[block_scoped_var.tsx:7:21]
 6 │                     }
 7 │                     build = false;
   ·                     ─────
 8 │                 }
   ╰────
  help: Variable 'build' is used outside its declaration block. Declare it outside the block or use 'let'/'const'.
